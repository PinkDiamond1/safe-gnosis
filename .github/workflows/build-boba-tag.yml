name: Publish Containers with TAGS

on:
  push:
    tags:
    - '*'

jobs:

  build-publish-win:
    name: Create containers
    runs-on: ubuntu-latest
    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_ACCESS_TOKEN_USERNAME }}
          password: ${{ secrets.DOCKERHUB_ACCESS_TOKEN_SECRET }}

      - uses: actions/checkout@v2

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Get services
        working-directory: ./boba_ops
        run: git submodule sync --recursive && git submodule update --recursive --init

      - name: Get the version
        id: tag
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}

      - name: Print current tag
        run: echo ${{ steps.tag.outputs.VERSION }}
        
      - name: Build the services
        working-directory: ./boba_ops
        run: docker compose build

      - name: Tag
        working-directory: ./boba_ops
        run: |
          docker images
          for i in $(docker images --format "{{.Repository}}:{{.Tag}}" | grep bobanetwork); do
            docker image tag "$i" bobanetwork/$(echo $i | awk -F'/' '{print $2}' | awk -F':' '{print $1}'):${{ steps.tag.outputs.VERSION }}
          done
          docker images
          docker images | grep ${{ steps.tag.outputs.VERSION }}

      - name: Push
        working-directory: ./boba_ops
        run: |
          for i in $(docker images --format "{{.Repository}}:{{.Tag}}" | grep bobanetwork); do
            echo "$1"
            docker push "$i"
          done